{"version":3,"sources":["Components/WeatherToday/apiWeatherToday.js","Components/WeatherToday/InfoWeatherToday.js","Components/WeatherPrevious/apiWeatherPrevious.js","Components/WeatherPrevious/validateDate.js","Components/WeatherPrevious/infoWeatherPrevious.js","index.js"],"names":["fetchData","position","coords","latitude","longitude","fetch","then","response","json","data","setWeatherDataToday","codeIcon","weather","icon","urlIcon","document","getElementById","innerHTML","weatherData","location","name","sys","country","description","main","temperature","temp","date","getDate","Object","keys","forEach","key","textContent","Date","toDateString","InfoWeatherToday","className","onLoad","navigator","geolocation","getCurrentPosition","id","setWeatherDataPrevius","i","dateP","descriptionP","tempMin","tempMax","d","m","a","ok","validateDate","getMonth","datePre","daily","min","max","InfoWeatherPrevius","style","justifyContent","alignItems","display","overflowX","ReactDOM","render","width"],"mappings":"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","file":"static/js/main.62b82c97.chunk.js","sourcesContent":["const API_KEY = 'e62712f5a8506ba9f4d2050b7b6f7f49'\r\n\r\nconst fetchData = position => {\r\n  const { latitude, longitude } = position.coords;\r\n  fetch(`http://api.openweathermap.org/data/2.5/weather?units=metric&lat=${latitude}&lon=${longitude}&appid=${API_KEY}`)\r\n    .then(response => response.json())\r\n    .then(data => setWeatherDataToday(data));\r\n}\r\n\r\nconst setWeatherDataToday = data =>{\r\n  const codeIcon = data.weather[0].icon\r\n  const urlIcon = `http://openweathermap.org/img/wn/${codeIcon}.png`\r\n  document.getElementById('icon').innerHTML = `<img src=${urlIcon}></img>`\r\n  \r\n  const weatherData = {\r\n    location: data.name + \", \" + data.sys.country,\r\n    description: data.weather[0].main,\r\n    temperature: data.main.temp + \" C°\",\r\n    date: getDate(),\r\n  }\r\n\r\n  Object.keys(weatherData).forEach( key => {\r\n    document.getElementById(key).textContent = weatherData[key];\r\n  });\r\n}\r\n\r\nconst getDate = () => {\r\n  let date = new Date();\r\n  return `${date.toDateString()}`;\r\n}\r\n\r\nexport const onLoad = () => {\r\n  navigator.geolocation.getCurrentPosition(fetchData);\r\n}","import React from 'react'\r\nimport { onLoad } from './apiWeatherToday' \r\n\r\nfunction InfoWeatherToday(){\r\n    return(\r\n        <div className=\"col-12 col-lg-12 col-md-12 col-sm-12\">\r\n            <div onLoad={onLoad()} className=\"weather container\">\r\n                <div>\r\n                    <div id=\"location\"></div>\r\n                    <div id=\"date\"></div>\r\n                    <div className=\"weather__IconDes\">\r\n                        <div id=\"icon\"></div>\r\n                        <div id=\"description\"></div>\r\n                    </div>\r\n                    <div id=\"temperature\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoWeatherToday;","import {validateDate} from './validateDate'\r\n\r\nconst API_KEY = 'e62712f5a8506ba9f4d2050b7b6f7f49'\r\n\r\nconst fetchData = position => {\r\n  const { latitude, longitude } = position.coords;\r\n  fetch(`https://api.openweathermap.org/data/2.5/onecall?units=metric&lat=${latitude}&lon=${longitude}&appid=${API_KEY}`)\r\n    .then(response => response.json())\r\n    .then(data => setWeatherDataPrevius(data));\r\n}\r\n\r\nconst setWeatherDataPrevius = data =>{\r\n    for(let i = 0; i < 8; i++){\r\n\r\n        var dateP = `dateP${[i]}`\r\n        var descriptionP = `descriptionP${[i]}`\r\n        var tempMin = `tempMin${[i]}`\r\n        var tempMax = `tempMax${[i]}`\r\n\r\n        const datePre = () => {\r\n            let d = new Date();\r\n            if(validateDate((d.getDate() + i), d.getMonth(), 2021)){\r\n                return `${(d.getDate() + i + 1)+ \"-\" +d.getMonth()}`;\r\n            }\r\n            else{\r\n                return ([i] - 6) + \"-\" + (d.getMonth() + 1)\r\n            }\r\n        }\r\n        \r\n        const weatherData = {\r\n            [dateP]: datePre(),\r\n            [descriptionP]: data.daily[i].weather[0].main,\r\n            [tempMin]: \"Min: \" + data.daily[i].temp.min + \" C°\",\r\n            [tempMax]: \"Max: \" + data.daily[i].temp.max + \" C°\",\r\n        }\r\n\r\n        document.getElementById(`weatherP${[i]}`).innerHTML = \r\n        `<div class=\"weather__card\">\r\n            <div class=\"datep\" id=\"dateP${[i]}\"></div>\r\n            <div class=\"weather__IconDes\">\r\n                <div id=\"iconP${[i]}\"></div>\r\n                <div id=\"descriptionP${[i]}\"></div>\r\n            </div>\r\n            <div class=\"temp\" id=\"tempMin${[i]}\"></div>\r\n            <div class=\"temp\" id=\"tempMax${[i]}\"></div>\r\n        </div>`\r\n\r\n        const codeIcon = data.daily[i].weather[0].icon\r\n        const urlIcon = `http://openweathermap.org/img/wn/${codeIcon}.png`\r\n        document.getElementById(`iconP${[i]}`).innerHTML = `<img src=${urlIcon}></img>`\r\n\r\n        Object.keys(weatherData).forEach( key => {\r\n            document.getElementById(key).textContent = weatherData[key];\r\n        });\r\n    }\r\n}\r\n\r\nexport const onLoad = () => {\r\n    navigator.geolocation.getCurrentPosition(fetchData);\r\n}","export function validateDate ( d, m, a )\r\n{\r\n    var ok = true;\r\n\r\n    if( (a < 1900) || (a > 2050) || (m < 1) || (m > 12) || (d < 1) || (d > 31) )\r\n       ok = false;\r\n    else\r\n    {\r\n       if((a%4 != 0) && (m == 2) && (d > 28))\r\n          ok = false;\r\n       else\r\n       {\r\n          if( (((m == 4) || (m == 6) || (m == 9) || (m==11)) && (d>30)) || ((m==2) && (d>29)) )\r\n             ok = false;\r\n       }\r\n    }\r\n\r\n    return ok;\r\n}","import React from 'react'\r\nimport { onLoad } from './apiWeatherPrevious' \r\n\r\nfunction InfoWeatherPrevius(){\r\n    return(\r\n        <div className=\"col-12 col-lg-12 col-md-12 col-sm-12\" style={{justifyContent: \"center\", alignItems: \"center\", display: \"flex\"}}>\r\n            <div style={{display: \"flex\", overflowX: \"scroll\"}}>\r\n                <div onLoad={onLoad()} id=\"weatherP0\" className=\"container\"></div>\r\n                <div onLoad={onLoad()} id=\"weatherP1\" className=\"container\"></div>\r\n                <div onLoad={onLoad()} id=\"weatherP2\" className=\"container\"></div>\r\n                <div onLoad={onLoad()} id=\"weatherP3\" className=\"container\"></div>\r\n                <div onLoad={onLoad()} id=\"weatherP4\" className=\"container\"></div>\r\n                <div onLoad={onLoad()} id=\"weatherP5\" className=\"container\"></div>\r\n                <div onLoad={onLoad()} id=\"weatherP6\" className=\"container\"></div>\r\n                <div onLoad={onLoad()} id=\"weatherP7\" className=\"container\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoWeatherPrevius;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InfoWeatherToday from './Components/WeatherToday/InfoWeatherToday'\nimport InfoWeatherPrevius from './Components/WeatherPrevious/infoWeatherPrevious'\nimport './index.css';\n\nReactDOM.render(\n  <div className=\"content container\">\n    <div className=\"row\" style={{width: \"100%\"}}>\n      <InfoWeatherToday />\n      <InfoWeatherPrevius />\n    </div>\n  </div>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}